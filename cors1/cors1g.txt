<!DOCTYPE html>
<html>
  <body onload="loadPhotos();">
    <div id="photos">Loading photos...</div>
    <script>
      function loadPhotos() {
        var api_key = '<YOUR API KEY HERE>';
        var method = 'GET';
        var url = 'https://api.flickr.com/services/rest/?' +
                  'method=flickr.people.getPublicPhotos&' +
                  'user_id=32951986%40N05&' +
                  'extras=url_q&format=json&nojsoncallback=1&' +
                  'api_key=' + api_key;
        var xhr = new XMLHttpRequest();
        if (!('withCredentials' in xhr)) {
          alert('Browser does not support CORS.');
          return;
        }
        xhr.open(method, url);
        xhr.onerror = function() {
          alert('There was an error.');
        };
        xhr.onload = function() {
          var data = JSON.parse(xhr.responseText);
          if (data.stat == 'ok') {
            var photosDiv = document.getElementById('photos');
            photosDiv.innerHTML = '';
            var photos = data.photos.photo;
            for (var i = 0; i < photos.length; i++) {
              var img = document.createElement('img');
              img.src = photos[i].url_q;
              photosDiv.appendChild(img);
            }
          } else {
            alert(data.message);
          }
        };
        xhr.send();
      }
    </script>
  </body>
</html>

Assigns a method to **onload event handler** xhr.onload = function() {

Response property         Description    
--------------------------------------------------------------------
status                    The HTTP status code (for example, 200 for a successful 
                          request).
statusText                The response string returned by the server (for example, 
                          OK for a successful request).
response                  The body of the response, in the format defined by 
                          responseType. If the client indicated that the response type is json, the response will be a JSON object
                          parsed from the response body.
responseText              The body of the response as a string. Can only be used 
                          if responseType was not set or was set as text.
responseXML               The body of the response as a DOM element (XML is 
                          here for historical reasons). Can only be used if responseType was not set or was set as document.
                          