Adding http headers

xhr.setRequestHeader('X-Requested-With', 'Dinosaurs be Crazy');

Making the request

<!DOCTYPE html>
<html>
  <body onload="loadPhotos();">
    <div id="photos">Loading photos...</div>
    <script>
      function loadPhotos() {
        var api_key = '<YOUR API KEY HERE>';
        var method = 'GET';
        var url = 'https://api.flickr.com/services/rest/?' +
                  'method=flickr.people.getPublicPhotos&' +
                  'user_id=32951986%40N05&' +
                  'extras=url_q&format=json&nojsoncallback=1&' +
                  'api_key=' + api_key;
        var xhr = new XMLHttpRequest();
        if (!('withCredentials' in xhr)) {
          alert('Browser does not support CORS.');
          return;
        }
        xhr.open(method, url);
        xhr.onerror = function() {
          alert('There was an error.');
        };
        xhr.onload = function() {
          var data = JSON.parse(xhr.responseText);
          if (data.stat == 'ok') {
            var photosDiv = document.getElementById('photos');
            photosDiv.innerHTML = '';
            var photos = data.photos.photo;
            for (var i = 0; i < photos.length; i++) {
              var img = document.createElement('img');
              img.src = photos[i].url_q;
              photosDiv.appendChild(img);
            }
          } else {
            alert(data.message);
          }
        };
        xhr.send();
      }
    </script>
  </body>
</html>


The send method initiates the http request:
xhr.send();


Event handler      Description                      p21
----------------------------------------------------------
onloadstart        Fires when the request starts.
onprogress         Fires when sending and loading data.
onabort            Fires when the request has been aborted by 
                   calling the abort method.
onerror            Fires when the request has failed.
onload             Fires when the request has successfully    
                   completed.
ontimeout          Fires when the timeout has been exceeded (if 
                   the client code specified a timeout value).
onloadend          Fires when the request has completed, 
                   regardless of whether there was an error or not.
onreadystatechange Legacy handler from the previous version of  
                   XMLHttpRequest; fires when legacy readyState property changes. It is superseded by other
                   events and is only useful for non-tier 1 browsers.